@page "/characters"

<PageTitle>Character Data</PageTitle>

@using SWNBlazorApp.Data
@using SWNUniverseGenerator.DefaultSettings
@using SWNUniverseGenerator.Models
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SWNUniverseGenerator.CreationTools

@inject ProtectedSessionStorage ProtectedSessionStore
@inject CharacterService CharacterService
@inject UniverseService UniverseService
@inject Universe CurrentUniverse
@inject PlanetService PlanetService
@inject ShipService ShipService
@inject CrewMemberService CrewMemberService
@inject IDialogService DialogService

<h1>Character Data</h1>

<p>All characters in the @universeName universe</p>

@if (characters == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <MudGrid>
        <MudItem xs="12">
            <MudExpansionPanels>
                @* Character Creation *@
                <MudExpansionPanel Text="Character Creation">
                    <MudItem xs="12" sm="6">
                        <MudPaper Class="pa-4">
                            <MudForm @ref="form">
                                <MudGrid>
                                    <MudItem xs="4">
                                        <MudTextField T="String" Label="First Name" Required="false" @bind-Value="newCharFirstName"/>
                                    </MudItem>
                                    <MudItem xs="4">
                                        <MudTextField T="String" Label="Last Name" Required="false" @bind-Value="newCharLastName"/>
                                    </MudItem>
                                    <MudItem xs="1">
                                        <MudTextField T="int" Label="Age" Required="false" @bind-Value="newCharAge"/>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudSelect T="Character.GenderEnum" Label="Gender" Required="true" @bind-Value="newCharGender">
                                            <MudSelectItem Value="@Character.GenderEnum.Undefined"/>
                                            <MudSelectItem Value="@Character.GenderEnum.Male"/>
                                            <MudSelectItem Value="@Character.GenderEnum.Female"/>
                                        </MudSelect>
                                    </MudItem>

                                    <MudItem xs="3">
                                        <MudTextField T="String" Label="Hair Color" Required="false" @bind-Value="newCharHairColor"/>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudTextField T="String" Label="Hair Style" Required="false" @bind-Value="newCharHairStyle"/>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudTextField T="String" Label="Eye Color" Required="false" @bind-Value="newCharEyeColor"/>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudTextField T="int" Label="Height" Required="false" @bind-Value="newCharHeight"/>
                                    </MudItem>

                                    <MudItem xs="6">
                                        <MudTextField T="String" Label="Title" Required="false" @bind-Value="newCharTitle"/>
                                    </MudItem>
                                    <MudItem xs="6">
                                        <MudTextField T="String" Label="Ship Id" Required="false" @bind-Value="newCharShipId"/>
                                    </MudItem>

                                    <MudItem xs="6">
                                        <MudTextField T="String" Label="Birth Planet ID" Required="false" @bind-Value="newCharBirthPlanetId"/>
                                    </MudItem>
                                    <MudItem xs="6">
                                        <MudTextField T="String" Label="Current Planet ID" Required="false" @bind-Value="newCharCurrPlanetId"/>
                                    </MudItem>

                                    <MudItem xs="2">
                                        <MudTextField T="int" Label="Crime Chance %" Required="false" @bind-Value="newCharCrimeChance"/>
                                    </MudItem>
                                    <MudItem xs="10">
                                        <MudTextField T="String" Label="Initial Reaction" Required="false" @bind-Value="newCharInitialReaction"/>
                                    </MudItem>
                                </MudGrid>
                            </MudForm>
                        </MudPaper>
                        <MudPaper Class="pa-4 mt-4">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => CreateCharacter())">Create Character</MudButton>
                            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(() => form.Reset())" Class="mx-2">Reset</MudButton>
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudPaper Class="pa-4 mud-height-full">

                        </MudPaper>
                    </MudItem>
                </MudExpansionPanel>
            </MudExpansionPanels>
        </MudItem>
        @* Character List *@
        <MudItem xs="8">
            <MudTable Items="@characters.OrderBy(c => c.Id)" Hover="true" SortLabel="Sort By" Filter="new Func<Character, bool>(CharacterFilterFunc)" @bind-SelectedItem="currentCharacter">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Character List</MudText>
                    <MudSpacer/>
                    <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<Character, object>(x => x.Name)">Name</MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<Character, object>(x => x.Gender)">Gender</MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<Character, object>(x => x.Title)">Title</MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<Ship, object>(x => x.Name)">Ship</MudTableSortLabel>
                    </MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Name" class="cursor-pointer">@context.Name</MudTd>
                    <MudTd DataLabel="Ship" class="cursor-pointer">@context.Gender</MudTd>
                    <MudTd DataLabel="Title" class="cursor-pointer">@context.Title</MudTd>
                    <MudTd DataLabel="Title" class="cursor-pointer">@GetShipName(context.Id)</MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new[] { 10, 15, 20, 25, 50, 75, 100, int.MaxValue }"/>
                </PagerContent>
            </MudTable>
        </MudItem>

        <MudItem xs="4">
            @*Individual Character Display*@
            @if (currentCharacter != null)
            {
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@currentCharacter.Name</MudText>
                            <MudText Typo="Typo.body2">@currentCharacter.Id</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="3">
                                <MudImage Src="images/abstract-user-flat-1.svg" Alt="No Image" Elevation="25" Fluid="true" Class="border-solid border-2 mud-border-primary pa-4"/>
                            </MudItem>
                            <MudItem xs="9">
                                @if (currentCharacter.Title != null)
                                {
                                    <MudText Typo="Typo.body1">Title: @currentCharacter.Title</MudText>
                                }
                                <MudGrid>
                                    <MudItem xs="12">
                                        <MudText Typo="Typo.h6">Physical Traits</MudText>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudText Typo="Typo.body1"><b>Gender:</b> @currentCharacter.Gender</MudText>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudText Typo="Typo.body1"><b>Skin Color:</b> @currentCharacter.SkinCol</MudText>
                                    </MudItem>
                                    <MudItem xs="6">
                                        <MudText Typo="Typo.body1"><b>Height:</b> @currentCharacter.Height cm</MudText>
                                    </MudItem>

                                    <MudItem xs="4">
                                        <MudText Typo="Typo.body1"><b>Eye Color:</b> @currentCharacter.EyeCol</MudText>
                                    </MudItem>
                                    <MudItem xs="4">
                                        <MudText Typo="Typo.body1"><b>Hair Style:</b> @currentCharacter.HairStyle</MudText>
                                    </MudItem>
                                    <MudItem xs="4">
                                        <MudText Typo="Typo.body1"><b>Hair Style:</b> @currentCharacter.HairCol</MudText>
                                    </MudItem>


                                    <MudDivider/>
                                    <MudItem xs="12">
                                        <MudText Typo="Typo.h6">Biographic Information</MudText>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudText Typo="Typo.body1"><b>Birth Planet:</b> @GetPlanetName(currentCharacter.BirthPlanetId)</MudText>
                                    </MudItem>

                                    @if (GetShipName(currentCharacter.Id) != null)
                                    {
                                        <MudDivider/>
                                        <MudItem xs="12">
                                            <MudText Typo="Typo.h6">Employment Information</MudText>
                                        </MudItem>
                                        <MudItem xs="12">
                                            <MudText Typo="Typo.body1"><b>Ship:</b> @GetShipName(currentCharacter.Id)</MudText>
                                        </MudItem>
                                    }

                                    @if (_isAdmin)
                                    {
                                        <MudDivider/>
                                        <MudItem xs="12">
                                            <MudText Typo="Typo.h6">Admin View</MudText>
                                        </MudItem>
                                        <MudItem xs="12">
                                            <MudText Typo="Typo.body1"><b>Current Planet:</b> @GetPlanetName(currentCharacter.CurrentLocationId)</MudText>
                                        </MudItem>
                                        <MudItem xs="6">
                                            <MudText Typo="Typo.body1"><b>Initial Reaction:</b> @currentCharacter.InitialReaction</MudText>
                                        </MudItem>
                                        <MudItem xs="6">
                                            <MudText Typo="Typo.body1"><b>Crime Chance:</b> @currentCharacter.CrimeChance%</MudText>
                                        </MudItem>
                                    }


                                </MudGrid>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            }
        </MudItem>
    </MudGrid>
}

@code {
    private List<Character>? characters;
    private Character currentCharacter;
    private string searchString;
    private bool _isAdmin = false;
    String universeName;
    MudForm form;

    private string newCharFirstName;
    private string newCharLastName;
    private int newCharAge;
    private Character.GenderEnum newCharGender = Character.GenderEnum.Undefined;
    private string newCharTitle;
    private string newCharShipId;
    private string newCharHairColor;
    private string newCharHairStyle;
    private string newCharEyeColor;
    private int newCharHeight;
    private string newCharBirthPlanetId;
    private string newCharCurrPlanetId;
    private int newCharCrimeChance;
    private string newCharInitialReaction;


    protected override async Task OnInitializedAsync()
    {
        var universeId = await ProtectedSessionStore.GetAsync<string>("SelectedUniverse");
        if (!string.IsNullOrEmpty(universeId.Value))
        {
            Task<Universe> task = UniverseService.GetUniverseAsync(universeId.Value);
            universeName = task.Result == null ? "None" : task.Result.Name;
            CurrentUniverse = UniverseService.GetUniverseAsync(universeId.Value).Result;
            characters = await CharacterService.GetCharactersAsync(universeId.Value);
        }
    }

    private String GetPlanetName(String planetId)
    {
        return PlanetService.GetPlanetAsync(planetId).Result.Name;
    }

    private String GetShipName(String charId)
    {
        var result = CrewMemberService.GetCrewMemberAsync(charId).Result;
        if (result != null)
        {
            return ShipService.GetShipAsync(result.ShipId).Result.Name;
        }

        return null;
    }

    private void CreateCharacters()
    {
    }

    private void CreateCharacter()
    {
        //TODO: Fix
        Creation creation = new Creation();
        creation.CreateCharacter(new CharacterDefaultSettings()
        {
            UniverseId = CurrentUniverse.Id,
            First = newCharFirstName,
            Last = newCharLastName,
            Gender = newCharGender,
            Age = newCharAge,
            HairStyle = newCharHairStyle,
            HairCol = newCharHairColor,
            EyeCol = newCharEyeColor,
            Height = newCharHeight,
            Title = newCharTitle,
            Count = 1,
            CrimeChance = new[] { newCharCrimeChance, newCharCrimeChance },
            ShipId = newCharShipId,
            BirthPlanetId = newCharBirthPlanetId,
            CurrentPlanetId = newCharCurrPlanetId,
            InitialReaction = newCharInitialReaction
        });
        OnInitializedAsync();
    }

    private bool CharacterFilterFunc(Character character) => CharacterFilter(character, searchString);

    private bool CharacterFilter(Character character, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (character.Name.Contains(this.searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (character.Id.Contains(this.searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

}