@page "/universes"
@using SWNBlazorApp.Data
@using SWNUniverseGenerator
@using SWNUniverseGenerator.DefaultSettings
@using SWNUniverseGenerator.Models

<PageTitle>Universes</PageTitle>

@inject UniverseService UniverseService
@inject CreationService CreationService
@inject Universe CurrentUniverse
@inject Persistence Persistence
@inject SerializeClass SerializeClass

<h1>Universes</h1>

<p role="status">Current universe: @GetUniverseName()</p>

@if (_createdNew)
{
    <p role="status">Universe Created in @((_end - _start).TotalMilliseconds)ms</p>
}

<button class="btn btn-primary" @onclick="CreateUniverse">Create New Universe</button>

@code {
    private bool _createdNew;
    private DateTime _start;
    private DateTime _end;
    
    private void CreateUniverse()
    {
        _start = DateTime.Now;
        Creation creation = CreationService.GetCreationAsync().Result;

        CurrentUniverse = creation.CreateUniverse(new UniverseDefaultSettings
        {
            Name = "Test",
            Overwrite = true
        });
        creation.CreateStars(CurrentUniverse, new StarDefaultSettings());
        creation.CreatePlanets(CurrentUniverse, new PlanetDefaultSettings());
        creation.CreateShips(CurrentUniverse, new ShipDefaultSettings());
        creation.CreateCharacter(CurrentUniverse, new CharacterDefaultSettings());

        Persistence.CurrentUniverseName = CurrentUniverse.Name;
        SerializeClass.SerializeData(Persistence);

        _end = DateTime.Now;
        _createdNew = true;
    }

    private string GetUniverseName()
    {
        Task<Universe> task = UniverseService.GetUniverseAsync();
        String currentUniverseName = task == null ? "None" : task.Result.Name;
        return currentUniverseName;
    }
}