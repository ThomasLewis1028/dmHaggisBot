@using SWNBlazorApp.Data
@using SWNUniverseGenerator.Models
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject ProtectedSessionStorage ProtectedSessionStore
@inject UniverseService UniverseService
@inject IMenuService MenuService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">SWNBlazorApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="universes">
                <span class="oi oi-plus" aria-hidden="true"></span> Universe List
            </NavLink>
        </div>
        @if (IsUniverseLoaded())
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/universe">
                    <span class="oi oi-plus" aria-hidden="true"></span> @universeName
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="stars">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> List Stars
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="characters">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> List NPCs
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="ships">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> List Ships
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    String universeName;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var universeID = await ProtectedSessionStore.GetAsync<string>("SelectedUniverse");
        if (!string.IsNullOrEmpty(universeID.Value))
        {
            universeName = UniverseService.GetUniverseAsync(universeID.Value).Result.Name;
        }
    }

    private bool IsUniverseLoaded()
    {
        return !string.IsNullOrEmpty(universeName);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void MenuChanged(EventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

}