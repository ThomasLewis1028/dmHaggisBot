// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWNUniverseGenerator.Database;

#nullable disable

namespace SWNUniverseGenerator.Migrations
{
    [DbContext(typeof(UniverseContext))]
    [Migration("20230227012950_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("SWNUniverseGenerator.DeserializedObjects.ShipDefense", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Class")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CostExtra")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Effect")
                        .HasColumnType("TEXT");

                    b.Property<int>("Mass")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MassExtra")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Power")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShipId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipDefense");
                });

            modelBuilder.Entity("SWNUniverseGenerator.DeserializedObjects.ShipFitting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Class")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CostExtra")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Effect")
                        .HasColumnType("TEXT");

                    b.Property<double>("Mass")
                        .HasColumnType("REAL");

                    b.Property<bool>("MassExtra")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Power")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PowerExtra")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShipId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipFitting");
                });

            modelBuilder.Entity("SWNUniverseGenerator.DeserializedObjects.ShipHull", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ac")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Armor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Class")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CrewMax")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CrewMin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hardpoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mass")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Power")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Speed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShipHull");
                });

            modelBuilder.Entity("SWNUniverseGenerator.DeserializedObjects.ShipWeapon", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AmmoCost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Class")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dmg")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hardpoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mass")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Power")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Qualities")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShipId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TechLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipWeapon");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Item", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Character", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirthPlanetId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CrimeChance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentLocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EyeCol")
                        .HasColumnType("TEXT");

                    b.Property<string>("First")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HairCol")
                        .HasColumnType("TEXT");

                    b.Property<string>("HairStyle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Height")
                        .HasColumnType("TEXT");

                    b.Property<string>("InitialReaction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last")
                        .HasColumnType("TEXT");

                    b.Property<string>("SkinCol")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BirthPlanetId");

                    b.HasIndex("UniverseId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.CrewMember", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CrewType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShipId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("ShipId")
                        .IsUnique();

                    b.ToTable("CrewMember");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Job", b =>
                {
                    b.Property<string>("JobId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CargoItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DestId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniverseId")
                        .HasColumnType("TEXT");

                    b.HasKey("JobId");

                    b.HasIndex("CargoItemId");

                    b.HasIndex("ContactId");

                    b.HasIndex("DestId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Planet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Atmosphere")
                        .HasColumnType("TEXT");

                    b.Property<string>("Biosphere")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstWorldTag")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Population")
                        .HasColumnType("TEXT");

                    b.Property<string>("Relationship")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondWorldTag")
                        .HasColumnType("TEXT");

                    b.Property<string>("TechLevel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Temperature")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZoneId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ZoneId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.PointOfInterest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OccupiedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Situation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZoneId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniverseId");

                    b.HasIndex("ZoneId");

                    b.ToTable("PointsOfInterest");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Problem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConflictType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Focus")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Restraint")
                        .HasColumnType("TEXT");

                    b.Property<string>("Situation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Twist")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Ship", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CrewSkill")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HomeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("HullId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HullId");

                    b.HasIndex("UniverseId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Star", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("StarClass")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StarColor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniverseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZoneId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniverseId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Universe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("GridX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GridY")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Universes");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Zone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UniverseId");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("SWNUniverseGenerator.DeserializedObjects.ShipDefense", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Ship", null)
                        .WithMany("Defenses")
                        .HasForeignKey("ShipId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.DeserializedObjects.ShipFitting", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Ship", null)
                        .WithMany("Fittings")
                        .HasForeignKey("ShipId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.DeserializedObjects.ShipWeapon", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Ship", null)
                        .WithMany("Weapons")
                        .HasForeignKey("ShipId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Character", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Planet", null)
                        .WithMany()
                        .HasForeignKey("BirthPlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany()
                        .HasForeignKey("UniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.CrewMember", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Character", null)
                        .WithOne()
                        .HasForeignKey("SWNUniverseGenerator.Models.CrewMember", "CharacterId");

                    b.HasOne("SWNUniverseGenerator.Models.Ship", null)
                        .WithOne()
                        .HasForeignKey("SWNUniverseGenerator.Models.CrewMember", "ShipId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Job", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Item", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoItemId");

                    b.HasOne("SWNUniverseGenerator.Models.Character", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("SWNUniverseGenerator.Models.Planet", "Dest")
                        .WithMany()
                        .HasForeignKey("DestId");

                    b.Navigation("Cargo");

                    b.Navigation("Contact");

                    b.Navigation("Dest");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Planet", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Zone", null)
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.PointOfInterest", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany()
                        .HasForeignKey("UniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWNUniverseGenerator.Models.Zone", null)
                        .WithMany()
                        .HasForeignKey("ZoneId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Ship", b =>
                {
                    b.HasOne("SWNUniverseGenerator.DeserializedObjects.ShipHull", "Hull")
                        .WithMany()
                        .HasForeignKey("HullId");

                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany()
                        .HasForeignKey("UniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hull");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Star", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany()
                        .HasForeignKey("UniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWNUniverseGenerator.Models.Zone", null)
                        .WithMany()
                        .HasForeignKey("ZoneId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Zone", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany()
                        .HasForeignKey("UniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Ship", b =>
                {
                    b.Navigation("Defenses");

                    b.Navigation("Fittings");

                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
