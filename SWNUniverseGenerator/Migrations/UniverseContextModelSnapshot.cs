// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWNUniverseGenerator.Database;

#nullable disable

namespace SWNUniverseGenerator.Migrations
{
    [DbContext(typeof(UniverseContext))]
    partial class UniverseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("SWNUniverseGenerator.Item", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Alien", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BodyTraits")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lenses")
                        .HasColumnType("TEXT");

                    b.Property<string>("MultiPolarType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SocialStructures")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniverseName");

                    b.ToTable("Alien");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Character", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirthPlanet")
                        .HasColumnType("TEXT");

                    b.Property<int>("CrimeChance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("EyeCol")
                        .HasColumnType("TEXT");

                    b.Property<string>("First")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HairCol")
                        .HasColumnType("TEXT");

                    b.Property<string>("HairStyle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Height")
                        .HasColumnType("TEXT");

                    b.Property<string>("InitialReaction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShipId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SkinCol")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniverseName");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Job", b =>
                {
                    b.Property<string>("JobId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CargoItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DestId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniverseName")
                        .HasColumnType("TEXT");

                    b.HasKey("JobId");

                    b.HasIndex("CargoItemId");

                    b.HasIndex("ContactId");

                    b.HasIndex("DestId");

                    b.HasIndex("UniverseName");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Planet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Atmosphere")
                        .HasColumnType("TEXT");

                    b.Property<string>("Biosphere")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstWorldTag")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Population")
                        .HasColumnType("TEXT");

                    b.Property<string>("Relationship")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondWorldTag")
                        .HasColumnType("TEXT");

                    b.Property<string>("StarId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TechLevel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Temperature")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZoneId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniverseName");

                    b.HasIndex("ZoneId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.PointOfInterest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OccupiedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Situation")
                        .HasColumnType("TEXT");

                    b.Property<string>("StarId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZoneId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniverseName");

                    b.HasIndex("ZoneId");

                    b.ToTable("PointsOfInterest");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Problem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConflictType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Focus")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Restraint")
                        .HasColumnType("TEXT");

                    b.Property<string>("Situation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Twist")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniverseName");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Ship", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CaptainId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CrewSkill")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EngineerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GunnerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hull")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PilotId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniverseName");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.ShipDefense", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShipId")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipDefense");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.ShipFitting", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShipId")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipFitting");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.ShipWeapon", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShipId")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipWeapon");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Star", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("StarClass")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StarColor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniverseName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UniverseName");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Universe", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("GridX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GridY")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("Universes");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Zone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("StarId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniverseName")
                        .HasColumnType("TEXT");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UniverseName");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Alien", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany("Aliens")
                        .HasForeignKey("UniverseName");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Character", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany("Characters")
                        .HasForeignKey("UniverseName");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Job", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Item", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoItemId");

                    b.HasOne("SWNUniverseGenerator.Models.Character", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("SWNUniverseGenerator.Models.Planet", "Dest")
                        .WithMany()
                        .HasForeignKey("DestId");

                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany("Jobs")
                        .HasForeignKey("UniverseName");

                    b.Navigation("Cargo");

                    b.Navigation("Contact");

                    b.Navigation("Dest");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Planet", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany("Planets")
                        .HasForeignKey("UniverseName");

                    b.HasOne("SWNUniverseGenerator.Models.Zone", null)
                        .WithMany("Planets")
                        .HasForeignKey("ZoneId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.PointOfInterest", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("UniverseName");

                    b.HasOne("SWNUniverseGenerator.Models.Zone", null)
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("ZoneId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Problem", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany("Problems")
                        .HasForeignKey("UniverseName");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Ship", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany("Ships")
                        .HasForeignKey("UniverseName");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.ShipDefense", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Ship", null)
                        .WithMany("Defenses")
                        .HasForeignKey("ShipId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.ShipFitting", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Ship", null)
                        .WithMany("Fittings")
                        .HasForeignKey("ShipId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.ShipWeapon", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Ship", null)
                        .WithMany("Weapons")
                        .HasForeignKey("ShipId");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Star", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany("Stars")
                        .HasForeignKey("UniverseName");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Zone", b =>
                {
                    b.HasOne("SWNUniverseGenerator.Models.Universe", null)
                        .WithMany("Zones")
                        .HasForeignKey("UniverseName");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Ship", b =>
                {
                    b.Navigation("Defenses");

                    b.Navigation("Fittings");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Universe", b =>
                {
                    b.Navigation("Aliens");

                    b.Navigation("Characters");

                    b.Navigation("Jobs");

                    b.Navigation("Planets");

                    b.Navigation("PointsOfInterest");

                    b.Navigation("Problems");

                    b.Navigation("Ships");

                    b.Navigation("Stars");

                    b.Navigation("Zones");
                });

            modelBuilder.Entity("SWNUniverseGenerator.Models.Zone", b =>
                {
                    b.Navigation("Planets");

                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
